package me.grplayer.grcraft.engine.minecraft;

import com.google.gson.Gson;
import com.google.gson.JsonObject;
import me.grplayer.grcraft.utils.CommonUtils;
import org.apache.commons.io.FileUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.jetbrains.annotations.NotNull;

import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Minecraft launcher class. This is the class to modify configurations of the Minecraft launcher.
 *
 * @author Gersom
 */
public class MinecraftLauncher {

    private final static Logger LOGGER = LogManager.getLogger();

    private final File minecraftDir;
    private final Gson gson;

    /**
     * The Minecraft launcher constructor.
     *
     * @param minecraftDir The .minecraft directory.
     * @param gson         A Gson instance.
     */
    public MinecraftLauncher(File minecraftDir, Gson gson) {
        this.minecraftDir = minecraftDir;
        this.gson = gson;
    }

    /**
     * Copies a version into the .minecraft directory.
     *
     * @param inputJar    The input jar file. As downloaded by the {@link me.grplayer.grcraft.engine.downloader.Downloader} class.
     * @param versionJSON The input version.json file. As generated by the {@link me.grplayer.grcraft.engine.generator.VersionGenerator} class.
     */
    public void copyVersion(@NotNull File inputJar, @NotNull File versionJSON) {
        String name = MinecraftUtils.versionNameFromJar(inputJar);
        File versionDir = new File(minecraftDir, "versions/" + name);
        if (versionDir.exists()) {
            LOGGER.info("Version already exists, deleting...");
            try {
                FileUtils.deleteDirectory(versionDir);
            } catch (IOException e) {
                throw new RuntimeException("Unable to delete version directory.", e);
            }
        }

        versionDir.mkdir();
        File versionFile = new File(versionDir, name + ".json");
        try {
            FileUtils.copyFile(versionJSON, versionFile);
            LOGGER.info("Copied version file.");
        } catch (IOException e) {
            throw new RuntimeException("Unable to copy version file.", e);
        }
        File jarFile = new File(versionDir, name + ".jar");
        try {
            FileUtils.copyFile(inputJar, jarFile);
            LOGGER.info("Copied jar file.");
        } catch (IOException e) {
            throw new RuntimeException("Unable to copy jar file.", e);
        }
    }

    /**
     * Adds the version to the launcher profiles. Makes it show it will show up in the launcher's version list.
     *
     * @param versionName The version name to add.
     */
    public void addVersionToLauncherProfile(@NotNull String versionName) {
        try {
            File launcherProfiles = new File(minecraftDir, "launcher_profiles.json");

            JsonObject launcherProfile = new JsonObject();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            String time = LocalDateTime.now().format(formatter);
            launcherProfile.addProperty("created", time);
            launcherProfile.addProperty("lastUsed", time);
            launcherProfile.addProperty("name", "G_Rcraft " + versionName.split("-")[0].replace("G_Rcraft_", ""));
            launcherProfile.addProperty("type", "custom");
            launcherProfile.addProperty("lastVersionId", versionName);
            launcherProfile.addProperty("icon", "data:image/png;base64," + CommonUtils.base64FromStream(getClass().getClassLoader().getResourceAsStream("assets/grcraft.png")));

            JsonObject launcherProfilesData = this.gson.fromJson(FileUtils.readFileToString(launcherProfiles, StandardCharsets.UTF_8), JsonObject.class);
            launcherProfilesData.getAsJsonObject("profiles").remove(versionName);
            launcherProfilesData.getAsJsonObject("profiles").add(versionName, launcherProfile);
            FileUtils.writeStringToFile(launcherProfiles, this.gson.toJson(launcherProfilesData), StandardCharsets.UTF_8);
        } catch (IOException e) {
            throw new RuntimeException("Unable to add version to launcher profile.", e);
        }
    }

}
